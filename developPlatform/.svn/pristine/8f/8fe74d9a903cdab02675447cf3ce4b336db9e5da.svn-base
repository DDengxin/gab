package com.tengzhi.business.sc.task.sctack.controller;

import java.io.IOException;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import com.tengzhi.base.jpa.dto.BaseDto;
import com.tengzhi.base.jpa.result.Result;
import com.tengzhi.business.sc.task.sctack.model.MScScrw;
import com.tengzhi.business.sc.task.sctack.service.ScTackService;
import com.tengzhi.business.sc.task.sctack.vo.MScScrwGxVo;
import com.tengzhi.business.sc.task.sctack.vo.MScScrwWlVo;

@RestController
@RequestMapping("/sc/task/sctask")
public class ScTackController {
	
	@Autowired
	private ScTackService scTackService;
	
	@GetMapping(value="/*.html")
	public ModelAndView pageForwart(ModelAndView mv) {
		return mv;
	}

	/**
	 * 查询数据列表
	 *
	 * @return
	 */
	@PostMapping(value = "/getSrchTopLeftList")
	public Result getSrchTopLeftList(BaseDto baseDto) throws IOException {
		return scTackService.getSrchTopLeftList(baseDto).getResult();
	}
	
	/**
	 * 查询数据列表
	 *
	 * @return
	 */
	@PostMapping(value = "/getSrchBottomList")
	public Result getSrchBottomList(BaseDto baseDto) throws IOException {
		return scTackService.getSrchBottomList(baseDto).getResult();
	}
	
	 /**
     * @throws IOException 
     * @Param: [vo]
     * @description:半成品list
     */
    @PostMapping("/getSrchGridList")
	public  Result getSrchGridList(BaseDto baseDto) throws IOException {
		return scTackService.getSrchGridList(baseDto).getResult();
	}
    
	@PostMapping(value = "/xsddSplit")
    public Result xsddSplit(@RequestBody MScScrw model) throws Exception {
        return scTackService.xsddSplit(model);
    }
	
	@PostMapping(value = "/xsddHp")
    public Result xsddHp(@RequestBody MScScrw model) throws Exception {
        return scTackService.xsddHp(model);
    }
	

	/**
	 * 查询数据列表
	 *
	 * @return
	 */
	@PostMapping(value = "/getSrchTopRightList")//中间工序grid
	public Result getSrchTopRightList(BaseDto baseDto) throws IOException {
		return scTackService.getSrchTopRightList(baseDto);
	}
	
	/**
	 * 查询数据列表
	 *
	 * @return
	 */
	@PostMapping(value = "/getSrchScpdList")//中间工序grid
	public Result getSrchScpdList(BaseDto baseDto) throws IOException {
		return scTackService.getSrchScpdList(baseDto);
	}
	
	
	/**
	 * 查询数据列表   srch_bottomleftgrid
	 *
	 * @return
	 */
	@PostMapping(value = "/getSrchBottomLeftList")//左下方物料grid
	public Result getSrchBottomLeftList(BaseDto baseDto) throws IOException {
		return scTackService.getSrchBottomLeftList(baseDto).getResult();
	}

	/**
	 * 查询生产任务数据(用于选择列表)
	 * @return
	 */
	@PostMapping(value = "/getProductionTaskSelectList")
	public Result getProductionTaskSelectList(BaseDto baseDto) throws IOException {
		return scTackService.getProductionTaskSelectList(baseDto).getResult();
	}
	
	@PostMapping(value = "/saveRwGx")
    public Result saveRwGx(@RequestBody MScScrwGxVo vo) throws Exception {
        return scTackService.saveRwGx(vo);
    }
	
	@PostMapping(value = "/updateRwGx")
    public Result updateRwGx(@RequestBody MScScrwGxVo vo) throws Exception {
        return scTackService.updateRwGx(vo);
    }
	
	
	@DeleteMapping(value = "deleteRwgx/{scMo}")
    public Result deleteRwgx(@PathVariable(value = "scMo") String scMo) throws Exception {
	 	scTackService.deleteRwgx(scMo);
        return Result.resultOk();
    }
	
	@PostMapping(value = "/saveRwWl")
    public Result saveRwWl(@RequestBody MScScrwWlVo vo) throws Exception {
        return scTackService.saveRwWl(vo);
    }
	
	@DeleteMapping(value = "deleteRwWl/{scrwMo}/{scrwGx}")
    public Result deleteRwWl(@PathVariable(value = "scrwMo") String scrwMo,@PathVariable(value = "scrwGx") String scrwGx) throws Exception {
	 	scTackService.deleteRwWl(scrwMo,scrwGx);
        return Result.resultOk("删除成功！");
    }
	
	  @DeleteMapping(value = "delete/{scMo}")
    public Result delete(@PathVariable(value = "scMo") String scMo) throws Exception {
		  return scTackService.deleteByScMo(scMo);
    }
	
}
