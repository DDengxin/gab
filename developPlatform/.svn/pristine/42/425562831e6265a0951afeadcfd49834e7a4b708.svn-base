<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org" xmlns:tz="http://www.w3.org/1999/xhtml">
<head>
    <th:block th:replace="~{model/Head :: head(~{::title},_,_,${'miniui,common'})}">
        <title>手工通知【新增】</title>
    </th:block>
</head>
<body>
<div class="mini-fit">
    <form id="form1">
        <input name="action" class="mini-hidden"/>
        <table class="hmq-modify-table">
            <tr>
                <td title>单号：</td>
                <td content>
                    <input class="mini-textbox" name="inNote" id="fhNote" readonly emptyText="自动生成"/>
                </td>
                <td title>日 期：</td>
                <td content>
                    <input class="mini-datepicker" name="inRq" value="new Date()" required/>
                </td>
                <td title>供货单位：</td>
                <td content>
                    <input required id="inCustomer" name="inCustomer"
                           allowInput="false" class="mini-buttonedit" onbuttonclick="onSupplierClick"/>
                </td>
                <td title>收货类型：</td>
                <td content>
                    <input class="mini-combobox" name="inType" required value="YL"
                           data='[{"id":"YL","text":"原料"},{"id":"ZZ","text":"半成品"},{"id":"CP","text":"线材"}]' onvaluechanged="intypeChange"/>
                </td>
                <td title>库房：</td>
                <td content>
                    <input class="mini-combobox" name="inLib"/>
                </td>
            </tr>
        </table>
    </form>
    <div tz:datagrid="datagrid" id="detail-grid" idField="fhCode"
         style="width: 100%; height: 450px;"
         url="/production/subcontract/wwrk/getSrchBottomList"
         allowCellEdit="true" allowCellSelect="true" multiSelect="true"
         editNextOnEnterKey="true" editNextRowCell="true" allowMoveColumn="true"
         showPager="false" allowCellValid="true"
         showColumnsMenu="true" showSummaryRow="true" oncellvalidation="onCellValidation"
         ondrawsummarycell="onDrawSummaryCell" sortMode="client">
        <div property="columns">
            <div tz:datagrid="indexcolumn" width="35">序号</div>
            <div tz:datagrid="column" field="inBz" width="80" align="center" visible="false">币种</div>
            <div tz:datagrid="column" field="inTax" width="80" align="center" visible="false">税率</div>
            <div name="inContract" field="inContract" displayField="inContract" align="center" width="128" sortField="inContract" headerAlign="center" allowSort="true">合同明细单号
                <input id="inContract" property="editor" class="mini-buttonedit" onbuttonclick="onButtonEdit" allowInput="false"/>
            </div>
            <div field="inKfcode" align="center" width="128" sortField="inKfcode" displayField="inKfcode" headerAlign="center" allowSort="true">编码
                <input id="inKfcode" property="editor" class="mini-buttonedit" onbuttonclick="onButtonEdit" allowInput="false"/>
            </div>
            <div name="cpcodeName" field="cpcodeName" align="left" width="120" sortField="cpcodeName" displayField="cpcodeName" headerAlign="center" allowSort="true">名称</div>
            <div name="cpcodeSize" field="cpcodeSize" align="left" width="120" sortField="cpcodeSize" displayField="cpcodeSize" headerAlign="center" allowSort="true">规格</div>
            <div name="cpcodeSizeEn" field="cpcodeSizeEn" width="100" align="center" sortField="cpcodeSizeEn" displayField="cpcodeSizeEn" headerAlign="center" allowSort="true">品牌</div>
            <div name="inJs" field="inJs" width="80" align="right" numberFormat="#,0.00" summaryType="sum" sortField="inJs" displayField="inJs" headerAlign="center" allowSort="true">件数
                <input property="editor" class="mini-textbox"/>
            </div>
            <div field="rksl" width="80" align="right" numberFormat="#,0.000" summaryType="sum" visible="false" sortField="rksl" displayField="rksl" headerAlign="center" allowSort="true">可收货数量</div>
            <div field="inSl" width="80" align="right" numberFormat="#,0.000" summaryType="sum" sortField="inSl" displayField="inSl" headerAlign="center" allowSort="true">数量
                <input property="editor" class="mini-textbox"/>
            </div>
            <div field="cpcodeBz" align="left" width="60" sortField="cpcodeBz" displayField="cpcodeBz" headerAlign="center" allowSort="true">单位</div>
            <div name="inZl" field="inZl" width="80" align="right" numberFormat="#,0000" summaryType="sum" sortField="inZl" displayField="inZl" headerAlign="center" allowSort="true">重量
                <input property="editor" class="mini-textbox"/>
            </div>
            <div field="inPrice" align="right" width="80" numberFormat="#,0.0000" sortField="inPrice" displayField="inPrice" headerAlign="center" allowSort="true">单价</div>
            <div field="inje" width="80" align="right" numberFormat="#,0.00" summaryType="sum" sortField="inje" displayField="inje" headerAlign="center" allowSort="true">金额</div>
            <div field="inPack" width="130" align="center" sortField="inPack" displayField="inPack" headerAlign="center" allowSort="true">包装号
                <input property="editor" class="mini-textbox"/>
            </div>
            <div field="inLuono" width="130" align="center" sortField="inLuono" displayField="inLuono" headerAlign="center" allowSort="true">炉号
                <input property="editor" class="mini-textbox"/>
            </div>
            <div field="inPh" width="130" align="center" sortField="inPh" displayField="inPh" headerAlign="center" allowSort="true">批号
                <input property="editor" class="mini-textbox"/>
            </div>
            <div field="inBpack" width="130" align="center" visible="false" sortField="inBpack" displayField="inBpack" headerAlign="center" allowSort="true">大包装号
                <input property="editor" class="mini-textbox"/>
            </div>

            <div field="inLuono" width="100" align="center" visible="false" sortField="inLuono" displayField="inLuono" headerAlign="center" allowSort="true">原料炉号
                <input property="editor" class="mini-textbox"/>
            </div>
            <div field="inVnote" width="100" align="center" visible="false" sortField="inVnote" displayField="inVnote" headerAlign="center" allowSort="true">专料专号
                <input property="editor" class="mini-textbox"/>
            </div>
            <div tz:datagrid="column" field="inRemarks" width="120" align="center">备注
                <input property="editor" class="mini-textbox"/>
            </div>
            <div field="" width="100%" headerAlign="center" allowSort="true" align="left"></div>
        </div>
    </div>
</div>
<div class="mini-toolbar hmq-toolbar">
    <a class="mini-button" onclick="addRow" iconCls="icon-add" id="addBtn">增行</a>
    <a class="mini-button" onclick="delRow" iconCls="icon-remove" id="delBtn">删行</a>
    <a class="mini-button" onclick="delAll" iconCls="icon-remove" id="delAllBtn">删单</a>
    <a class="mini-button" onclick="SaveData" iconCls="icon-save" id="saveBtn">保存</a>
    <a class="mini-button" onclick="CloseWindow" iconCls="icon-cancel">关闭</a>
</div>
</body>
<script type="text/javascript">
    mini.parse();
    var form = new mini.Form('form1');
    var detail_grid = mini.get('detail-grid');
    intypeChange("1");
    //隐藏件数重量列
    detail_grid.hideColumn("inJs");
    detail_grid.hideColumn("inZl");

    /**
     * 页面初始化
     **/
    function SetData(options) {
        form.getField('action').setValue(options.action);
        if (options.action == 'edit') {
            var row = options.data.row;
            $.get("getById/{0}".format(row.inNote), function (res) {
                if (200 === res.code) {
                    form.setData(res.data, true);
                    form.getField('inType').setValue(row.inType);
                    intypeChange("1");
                    setFormEnabled(form, "inCustomer,inLib,inType", false);
                    var data = mini.decode(res.data);
                    mini.get("inCustomer").setText(data.incustomername);
                    detail_grid.load({
                        params: JSON.stringify({inNote: form.getField('inNote').getValue()})
                    });
                }
            });
        }
    }

    /**
     * 收货类型 值改变 事件
     */
    function intypeChange(e) {
        form.getField('inLib').setEnabled(true);
        var inType = form.getField('inType').getValue();
        if (inType && inType != 'ZZ') {
            //动态列转换
            hmq.business.dynamicProductParams(inType, {
                miniDataGrid: detail_grid,
                success: function (map, res) {
                },
                error: function (res) {
                    hmq.tipDanger(res.msg || '动态数据列加载失败,请检查配置!');
                }
            });
            form.getField('inLib').setUrl("/system/parameter/getParamsSelectListByParentId/仓库/{0}".format(inType));
            form.getField('inLib').select(0);
        } else {
            form.getField('inLib').setData([]);
            form.getField('inLib').setEnabled(false);
        }
    }


    /**
     * 弹出框
     */
    function onButtonEdit(e) {
        var btnEdit = this;
        var cgStype = form.getField('inType').getValue();
        if (e.source.id == "inContract") {
            if (mini.get("inCustomer").getValue() == "") {
                hmq.tipDanger("请选择供货单位！");
                return;
            }
            var parms = {
                inSupplier: mini.get("inCustomer").getValue(),
                inSuppliername: mini.get("inCustomer").getText(),
                cgStype: cgStype
            };
            return miniopen({
                targetWindow: window.top,
                url: "/production/subcontract/wwrk/wwhtselectlist.html",
                title: "委外加工合同选择列表",
                width: 1300,
                height: 620,
                onload: function () {
                    var iframe = this.getIFrameEl();
                    var data = {
                        action: "search",
                        sid: parms
                    };
                    iframe.contentWindow.SetData(data);
                },
                ondestroy: function (action) {
                    if (action == "ok") {
                        var iframe = this.getIFrameEl();
                        var rows = iframe.contentWindow.GetMutiData();
                        rows = mini.clone(rows); //必须
                        var dataRows = appendRow(rows);
                        if (dataRows.length > 0) {
                            btnEdit.setValue(dataRows[0].htmo);
                            btnEdit.setText(dataRows[0].htmo);
                            var row = detail_grid.getSelected();
                            detail_grid.updateRow(row, {
                                inContract: dataRows[0].htmo,
                                inKfcode: dataRows[0].htcode,
                                cpcodeName: dataRows[0].cpcodename,
                                cpcodeSize: dataRows[0].cpcodesize,
                                cpcodeBz: dataRows[0].cpcodebz,
                                cpcodeSizeEn: dataRows[0].cpcodesizeen,
                                inSl: dataRows[0].wssl,
                                rksl: dataRows[0].kssl,
                                inZl: 0,
                                inPrice: dataRows[0].htprice,
                                inje: dataRows[0].htje,
                                inType: cgStype,
                                inBz: dataRows[0].htbz,
                                inTax: dataRows[0].httax
                            });

                            if (dataRows.length > 1) {
                                for (var i = 1; i < dataRows.length; i++) {
                                    var r = dataRows[i];
                                    var newRow = {
                                        inContract: r.htmo,
                                        inKfcode: r.htcode,
                                        cpcodeName: r.cpcodename,
                                        cpcodeSize: r.cpcodesize,
                                        cpcodeBz: r.cpcodebz,
                                        cpcodeSizeEn: r.cpcodesizeen,
                                        inSl: r.wssl,
                                        rksl: r.kssl,
                                        inZl: 0,
                                        inPrice: r.htprice,
                                        inje: r.htje,
                                        inType: cgStype,
                                        inBz: dataRows[0].htbz,
                                        inTax: dataRows[0].httax
                                    };
                                    detail_grid.addRow(newRow, 0);
                                }

                            }
                            detail_grid.clearSelect();
                        }
                    }
                }
            });
        }
        if (e.source.id == "inKfcode") {
            return miniopen({
                targetWindow: window.top,
                url: "/cg/yw/purchaseFile/purchaseContract/wlbmselectlist.html",
                title: "编码单选择列表",
                width: 1300,
                height: 620,
                onload: function () {
                    var iframe = this.getIFrameEl();
                    var data = {
                        action: "search",
                        cgStype: cgStype

                    };
                    iframe.contentWindow.SetData(data);
                },
                ondestroy: function (action) {
                    if (action == "ok") {
                        var iframe = this.getIFrameEl();
                        var rows = iframe.contentWindow.GetMutiData();
                        rows = mini.clone(rows); //必须
                        var dataRows = appendRow2(rows);
                        if (dataRows.length > 0) {
                            btnEdit.setValue(dataRows[0].cpcodeid);
                            btnEdit.setText(dataRows[0].cpcodeid);
                            var row = detail_grid.getSelected();
                            detail_grid.updateRow(row, {
                                inContract: null,
                                inKfcode: dataRows[0].cpcodeid,
                                cpcodeName: dataRows[0].cpcodename,
                                cpcodeSize: dataRows[0].cpcodesize,
                                cpcodeBz: dataRows[0].cpcodebz,
                                cpcodeSizeEn: dataRows[0].cpcodesizeen,
                                inType: cgStype,
                                intypename: cgName,
                                inHs: dataRows[0].cpcode02
                            });

                            if (dataRows.length > 1) {
                                for (var i = 1; i < dataRows.length; i++) {
                                    var r = dataRows[i];
                                    var newRow = {
                                        inContract: null,
                                        inKfcode: r.cpcodeid,
                                        cpcodeName: r.cpcodename,
                                        cpcodeSize: r.cpcodesize,
                                        cpcodeBz: r.cpcodebz,
                                        cpcodeSizeEn: r.cpcodesizeen,
                                        inType: cgStype,
                                        intypename: cgName,
                                        inHs: r.cpcode02
                                    };
                                    detail_grid.addRow(newRow, 0);
                                }

                            }
                            detail_grid.clearSelect();
                        }
                    }
                }
            });
        }

    }

    /**
     * 新增行
     */
    function addRow() {
        if (hmq.isEmpty(form.getField("inCustomer").getValue())) {
            hmq.tipDanger("请先选择供货单位！");
            return false;
        } else if (hmq.isEmpty(form.getField("inLib").getValue())) {
            hmq.tipDanger("请先选择库房！");
            return false;
        } else {
            var index = detail_grid.getData().length;
            detail_grid.addRow({}, index + 1);
            setFormEnabled(form, "inCustomer,inLib,inType", false);
        }
    }

    /**
     * 删除行
     */
    function delRow() {
        var rows = detail_grid.getSelecteds();
        if (rows.length > 0) {
            detail_grid.removeRows(rows, true);
            if (detail_grid.getData() == "") {
                setFormEnabled(form, "fhCustomer,fhLib", true);
            }
        } else {
            hmq.tipDanger('请选择需要删除的行！');
        }
    }

    /**
     * 删除整单
     */
    function delAll() {
        var note = mini.get("fhNote").getValue();
        var rows = detail_grid.getData();
        if (note.length > 0) {
            mini.confirm("确定删除整单吗？", "提示信息", function (returndata) {
                if (returndata == "ok") {
                    if (rows.length > 0) {
                        detail_grid.removeRows(rows, true);
                    }
                    mini.get("delAllBtn").disable();
                    $['delete']("delete/{0}".format(note), function (res) {
                        if (200 === res.code) {
                            hmq.tipSuccess(res.msg || '删除成功', {
                                exec: function () {
                                    CloseWindow('refresh');
                                }
                            });
                        } else {
                            hmq.tipDanger(res.msg || '删除失败');
                        }
                    });
                }
            });
        } else {
            if (rows.length > 0) {
                detail_grid.removeRows(rows, true);
                if (detail_grid.getData() == "") {
                    setFormEnabled(form, "fhCustomer,fhLib", true);
                }
            }
        }
    }

    /**
     * 保存
     */
    function SaveData() {
        if (form.validate() && form.isValid()) {
            detail_grid.validate();
            if (detail_grid.isValid() == false) {
                var error = detail_grid.getCellErrors()[0];
                detail_grid.beginEditCell(error.record, error.column);
                return;
            }
            detailDataList = detail_grid.getData();
            $(detailDataList).each(function (index) {
                detailDataList[index]._state = detailDataList[index]._state || 'modified';
            });
            var method = 'add' == mini.getByName("action").getValue() ? 'post' : 'put';
            $[method]("add.html", JSON.stringify({
                eCkIn: form.getData(true),
                eCkInMx: detailDataList
            }), function (res) {
                if (200 === res.code) {
                    hmq.tipSuccess(res.msg || '保存成功', {
                        exec: function () {
                            CloseWindow('refresh');
                        }
                    });
                } else {
                    hmq.tipDanger(res.msg || '保存失败');
                }
            }, null, {
                contentType: 'application/json'
            });
        }
    }

    /**
     汇总方法
     */
    function onDrawSummaryCell(e) {
        if (e.field == "fhCode") {
            return "<span style='color:Brown;'>合计:</span>";
        } else if (!!~['sl', 'fhSl'].indexOf(e.field)) {
            e.cellHtml = "<span style='color:Brown;float:right;'>" + parseFloat(e.value).toFixed(3) + "</span>";
        }
    }

    /**
     * 供货单位选择
     */
    function onSupplierClick(e) {
        var btnEdit = e.sender;
        return miniopen({
            targetWindow: window.top,
            url: "/cg/yw/purchaseFile/purchaseContract/supplierselectlist.html",
            title: "【供货单位】选择页面",
            width: 750,
            data: "S",
            height: 620,
            ondestroy: function (action) {
                if (action == "ok") {
                    var iframe = this.getIFrameEl();
                    var data = iframe.contentWindow.GetData();
                    btnEdit.setValue(data.customerId);
                    btnEdit.setText(data.customerExp);
                }
            }
        });
    }

    /**
     * 验证数量、金额不小于0
     */
    function onCellValidation(e) {
        if (e.field == "fhSl") {
            if (isNaN(e.value)) {
                e.isValid = false;
                e.errorText = "数量必须为数字";
                detail_grid.beginEditCell(e.record, e.field);
                return hmq.tipDanger(e.errorText);
            } else if (e.record.sl < parseFloat(e.value)) {
                e.isValid = false;
                e.errorText = "数量不得大于库存数量";
                detail_grid.beginEditCell(e.record, e.field);
                return hmq.tipDanger(e.errorText);
            }

        } else if (e.field == "fhContract") {
            if (isNull(e.value)) {
                e.isValid = false;
                e.errorText = "不能为空";
                detail_grid.beginEditCell(e.record, e.field);
                return hmq.tipDanger(e.errorText);
            }

        }
    }

    function appendRow(rows) {
        var retRows = [];
        for (var i = 0; i < rows.length; i++) {
            if (!isEixsts(rows[i])) {
                retRows.push(rows[i]);
            } else {
                hmq.tipDanger("数据已添加");
            }
        }
        return retRows;
    }

    /**
     判断是否存在
     */
    function isEixsts(data) {
        var row = detail_grid.findRow(function (row) {
            if (row.inContract == data.htmo)
                return true;
        });
        if (row != null) {
            return true;
        }
        return false;
    }

    /**
     附件行
     */
    function appendRow2(rows) {
        var retRows = [];
        for (var i = 0; i < rows.length; i++) {
            if (!isEixsts2(rows[i])) {
                retRows.push(rows[i]);
            } else {
                hmq.tipDanger("数据已添加");
            }
        }
        return retRows;
    }

    /**
     判断是否存在
     */
    function isEixsts2(data) {
        var row = detail_grid.findRow(function (row) {
            if (row.inKfcode == data.cpcodeid)
                return true;
        });
        if (row != null) {
            return true;
        }
        return false;
    }

    /**
     * 获取需要添加的行数据(通过主键排除已经存在的行数据)
     * @param rows 需要添加的行数据
     **/
    function getNeedAppendRows(rows) {
        var $rows = $(rows);
        var notExistRows = $rows.filter(function (index, row) {
            return detail_grid.findRows(function (rrow) {
                return (row.code == rrow.fhCode);
            }) <= 0;
        });
        return (notExistRows || $([])).toArray();
    }

</script>
</html>