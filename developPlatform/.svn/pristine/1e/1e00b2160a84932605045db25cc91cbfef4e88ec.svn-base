<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head>
    <th:block th:replace="~{model/Head :: head(~{::title},_,_,${'miniui,common'})}">
        <title>公司管理【新增】</title>
    </th:block>
</head>
<body>


<div class="mini-fit">
    <form id="form1">
        <table class="hmq-modify-table">
            <tr>
                <td title>位置:</td>
                <td content colspan="2">
                    <input name="index" class="mini-spinner" minValue="0" enabled="false" maxValue="999999999"/>
                </td>
                <td title colspan="1.5"><span style="color: red">位置设置请拖拽</span></td>
            </tr>
            <tr>
                <td title>宽度:</td>
                <td content colspan="3">
                    <input name="width" class="mini-spinner" minValue="0" maxValue="999999999"/>
            </tr>
            <tr>
                <td title>列头名称:</td>
                <td content colspan="3">
                    <input class="mini-textbox" name="header"/>
                </td>
            </tr>
            <tr>
                <td title>对齐方式:</td>
                <td content colspan="3">
                    <input class="mini-textbox" name="align"/>
                </td>
            </tr>
            <tr>
                <td title>数据类型:</td>
                <td content colspan="3">
                    <select name="dataType" class="mini-combobox" emptyText="请选择..." onvaluechanged="onValueChangedHandler">
                        <option value="">请选择...</option>
                        <option value="currencyUnit">currencyUnit</option>
                        <option value="dateFormat">dateFormat</option>
                        <option value="numberFormat">numberFormat</option>
                    </select>
                </td>
            </tr>
            <tr>
                <td title>数据类型值:</td>
                <td content colspan="3">
                    <input class="mini-textbox" required name="dataTypeValue"/>
                </td>
            </tr>
        </table>
    </form>
</div>
<div class="mini-toolbar hmq-toolbar">
    <a class="mini-button" onclick="SaveData" iconCls="icon-save" id="saveBtn">保存</a>
    <a class="mini-button" onclick="CloseWindow" iconCls="icon-cancel">关闭</a>
</div>
</body>
<script type="text/javascript">
    mini.parse();
    var form = new mini.Form('form1');
    var e = null;
    var menuId = null;

    function SetData(options) {
        e = options.data;
        menuId = options.menuId;

        if (options.data.column.hasOwnProperty("width")) {
            mini.getByName("width").setValue(options.data.column.width);
        }
        if (options.data.column.hasOwnProperty("_index")) {
            mini.getByName("index").setValue(options.data.column._index);
        }
        if (options.data.column.hasOwnProperty("header")) {
            mini.getByName("header").setValue(options.data.column.header);
        }
        if (options.data.column.hasOwnProperty("align")) {
            mini.getByName("align").setValue(options.data.column.align);
        }

        if (options.data.column.hasOwnProperty("currencyUnit")) {
            mini.getByName("dataType").select(1);
            mini.getByName("dataType").doValueChanged();
            mini.getByName("dataTypeValue").setValue(options.data.column.currencyUnit);
        }
        if (options.data.column.hasOwnProperty("dateFormat")) {
            mini.getByName("dataType").select(2);+
                mini.getByName("dataType").doValueChanged();
            mini.getByName("dataTypeValue").setValue(options.data.column.dateFormat);
        }
        if (options.data.column.hasOwnProperty("numberFormat")) {
            mini.getByName("dataType").select(3);
            mini.getByName("dataType").doValueChanged();
            mini.getByName("dataTypeValue").setValue(options.data.column.numberFormat);
        }


        mini.getbyName('dataType').doValueChanged();
    }

    function onValueChangedHandler() {
        mini.getbyName('dataTypeValue').setEnabled(mini.getByName("dataType").getValue() != "")
    }

    function SaveData() {
        if (form.validate() && form.isValid()) {
            var dataPack = {
                gridId: e.sender.id,
                menuId: menuId,
                rowsData: initializeGridColumn.readSetting(e.sender.getColumns())
            };
            if (mini.getByName("width").getValue() != "0") { //修改列
                dataPack.rowsData[e.column._index]["width"] = mini.getByName("width").getValue() + 'px';
                dataPack.rowsData[e.column._index]["pxWidth"] = mini.getByName("width").getValue();
            }
            if (mini.getByName("header").getValue() != "") {
                dataPack.rowsData[e.column._index]["header"] = mini.getByName("header").getValue();
            }
            if (mini.getByName("align").getValue() != "") {
                dataPack.rowsData[e.column._index]["align"] = mini.getByName("align").getValue();
            }
            if (mini.getByName("dataTypeValue").getValue() != "") {
                var remove=mini.getByName("dataType").getData();
                $(remove).each(function (index,item) {
                    if(item.text==mini.getByName("dataType").getValue()){
                        dataPack.rowsData[e.column._index][item.text] = mini.getByName("dataTypeValue").getValue();
                    }else{
                        delete dataPack.rowsData[e.column._index][item.text];
                    }
                })
            }
            dataPack.rowsData = JSON.stringify(dataPack.rowsData);

            $.post("/grid/dynamic/column/currentSavaAndUpdate", JSON.stringify(dataPack),
                function (res) {
                    if (200 === res.code) {
                        hmq.tipSuccess(res.msg || '配置成功', {
                            exec: function () {
                                CloseWindow('ok');
                                parent.parent.tabs.reloadTab(parent.parent.tabs.getActiveTab());
                            }
                        });
                    } else {
                        hmq.tipDanger(res.msg || '配置失败');
                    }
                }, null, {
                    contentType: 'application/json'
                });
        }

    }


</script>
</html>
