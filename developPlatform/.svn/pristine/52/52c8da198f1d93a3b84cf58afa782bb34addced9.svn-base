<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org" xmlns:tz="http://www.w3.org/1999/xhtml">
<head>
    <th:block th:replace="~{model/Head :: head(~{::title},_,_,${'miniui,common'})}">
        <title>数据修改【新增】</title>
    </th:block>
</head>
<body>
<div class="mini-fit">
    <form id="form1">
     	<input id="action" name="action" class="mini-hidden"/>
     	<table class="hmq-modify-table">
        	<tr>
            	<td title>申请日期：</td>
                <td content>
                    <input class="mini-datepicker" required id="sqRq" name="sqRq" value="new Date()" />
                </td>
                <td title>申请单号：</td>
                <td content>
                    <input class="mini-textbox" required id="sqNote" name="sqNote" />
                </td>
        	</tr>
        	<tr>
            	<td title>申请类型：</td>
                <td content>
                    <input class="mini-combobox" required id="sqType" name="sqType" url="/xt/routine/type/sqlx" textField="combtext" valueField="combid"/>
                </td>
                <td title>业务单号：</td>
                <td content>
                    <input class="mini-textbox" required id="ywNote" name="ywNote" />
                </td>
        	</tr>
        	<!-- <tr>
            	<td title>申请部门：</td>
                <td content>
                    <input class="mini-combobox" allowInput="true" required id="sqDept" name="sqDept" url="" />
                </td>
                <td title>申请人员：</td>
                <td content>
                    <input class="mini-combobox" allowInput="true" required id="sqMan" name="sqMan" url="" />
                </td>
        	</tr> -->
        	<tr>
            	<td title>申请事由：</td>
                <td content colspan="3">
                    <input class="mini-textarea" required id="sqSy" name="sqSy" style="height:60px;"/>
                </td>
        	</tr>
        </table>
    </form>
            <div tz:datagrid="datagrid" id="datagrid" idField="sqNote" sortField="sqCode" sortOrder="asc" style="width:100%;height:300px;" url="" allowCellEdit="true" allowCellSelect="true" multiSelect="true"  sortMode="client" editNextOnEnterKey="true" editNextRowCell="true" allowMoveColumn="true" showPager="false"  oncellvalidation="onCellValidation" OnCellCommitEdit="OnCellCommitEdit" allowCellValid="true" showColumnsMenu="true" showSummaryRow="true" OnCellBeginEdit="OnCellBeginEdit" ondrawsummarycell="onDrawSummaryCell" >
                <div property="columns">
                 <div tz:datagrid="checkcolumn" width="15" ></div>
					<div tz:datagrid="column" field="sqCode" width="60" align="center">编码
					 	<input id="sqCode"  property="editor" class="mini-buttonedit" onbuttonclick="onButtonEdit" allowInput="false" />
					</div>
					<!-- <div tz:datagrid="column" field="sqType" width="60" align="center">种类
					 	<input property="editor" class="mini-textbox" />
					</div> -->
					<div tz:datagrid="column" field="sqXm" width="60" align="center">项目
					 	<input property="editor" class="mini-textbox" />
					 	<input property="editor" class="mini-combobox" required url="/xt/routine/type/sgxm" textField="combtext" valueField="combid"/>
					</div>
					<div tz:datagrid="column" field="sqYc" width="60" align="center">原来内容
					 	<input property="editor" class="mini-textbox" />
					</div>
					<div tz:datagrid="column" field="sqValue" width="60" align="center">修改内容
					 	<input property="editor" class="mini-textbox" />
					</div>
					<div tz:datagrid="column" field="sqSm" width="60" align="center">修改原因
					 	<input property="editor" class="mini-textbox" />
					</div>
					<div tz:datagrid="column" field="sqFlag" width="60" align="center">修改状态
					 	<input property="editor" class="mini-textbox" />
					</div>
					<div tz:datagrid="column" field="" ></div>
                </div>
            </div>
</div>

<div class="mini-toolbar hmq-toolbar">
 	<a class="mini-button" onclick="addRow" iconCls="icon-add" id="addBtn">增行</a>
  	<a class="mini-button" onclick="delRow" iconCls="icon-remove" id="delBtn">删行</a>
  	<a class="mini-button" onclick="delAll" iconCls="icon-remove" id="delAllBtn">删单</a>
    <a class="mini-button" onclick="SaveData" iconCls="icon-save" id="saveBtn">保存</a>
    <a class="mini-button" onclick="CloseWindow" iconCls="icon-cancel">关闭</a>
</div>
</body>
<script type="text/javascript">
    mini.parse();
    var form = new mini.Form('form1');
    var grid = mini.get('datagrid');
    

    
    /**
	 新增行
	 */
    function addRow(){
		var index =grid.getData().length;
		var newRow = {};
    	grid.addRow(newRow, index+1);
    }
    
    /**
	 删除行
	 */
    function delRow(){
    	 var rows = grid.getSelecteds();
         if(rows.length>0){
        	 grid.removeRows(rows,true);
         }else{
        	 hmq.tipDanger('请选择需要删除的行！');
         }
    }
    /**
	 删除整单
	 */
	function delAll() {
		var note = mini.get("sqNote").getValue();
		var rows = grid.getData();
		if (note.length > 0) {
			mini.confirm("确定删除整单吗？", "提示信息", function(returndata) {
				if (returndata == "ok") {
					if (rows.length > 0) {
						grid.removeRows(rows, true);
					}
					mini.get("delAllBtn").disable();
			      $['delete']("delete/{0}".format(note), function (res) {
			    	  if (200 === res.code) {
		                    hmq.tipSuccess(res.msg || '删除成功', {
		                        exec: function () {
		                            CloseWindow('refresh');
		                        }
		                    });
		                } else {
		                    hmq.tipDanger(res.msg || '删除失败');
		                }
		            });
				}
			});
		} else {
			if (rows.length > 0) {
				grid.removeRows(rows, true);
			}
		}
	}
    
	/**
     	保存
     */
    function SaveData() {
    	if (form.validate() && form.isValid()) {
    		grid.validate();
			if (grid.isValid() == false) {
				var error = grid.getCellErrors()[0];
				grid.beginEditCell(error.record, error.column);
				return;
			}
            var gridData = grid.getChanges();
            if(gridData==""){
            	gridData=grid.getData();
            }
            $(gridData).each(function (index) {
            	gridData[index].rightOrd = index;
            	gridData[index]._state = gridData[index]._state || 'modified';
            });
            var method = 'add' == $('[name=action]').val() ? 'post' : 'put';
            $[method]("add.html", JSON.stringify({
            	headdata  : form.getData(true),
            	entitydata: gridData
                
            }), function (res) {
                if (200 === res.code) {
                    hmq.tipSuccess(res.msg || '保存成功', {
                        exec: function () {
                            CloseWindow('refresh');
                        }
                    });
                } else {
                    hmq.tipDanger(res.msg || '保存失败');
                }
            }, null, {
                contentType: 'application/json'
            });
        }
    }
	
    
	 /**
	 回调函数
	 */
    function SetData(options) {
        if ('add' == options.action) {
            grid.clearData();
            $('[name=action]').val(options.action);
        } else if ('edit' == options.action) {
        	var row = options.data;
            $.get("getByNote/{0}".format(row.sqNote), function (res) {
                if (200 === res.code) {
                    form.setData(res.data);
                    var data = mini.decode(res.data);
                    grid.setUrl("/xt/routine/getSrchBottomList");
                    grid.load({
                        params: JSON.stringify({sqNote: form.getField('sqNote').getValue()})
                    });
                }       
            });         
        }               
    }                   
                                             
    function onButtonEdit(e) {
		var btnEdit = this;
		var index =grid.getData().length;
		if (e.source.id == "sqCode") {
			return miniopen({
				targetWindow: window.top,
		        url: "/sale/saleProduct/saleContract/wlbmselectlist.html",
				title : "编码单选择列表",
				width : 1300,
				height : 620,
				onload : function() {
					var iframe = this.getIFrameEl();
					var data = {
						action : "search",
						cgStype : mini.get("htStype").getValue()
						
					};
					iframe.contentWindow.SetData(data);
				},
				ondestroy : function(action) {
					if (action == "ok") {
						var iframe = this.getIFrameEl();
						var rows = iframe.contentWindow.GetMutiData();
						rows = mini.clone(rows); //必须
						var dataRows = appendRow(rows);
						if (dataRows.length > 0) {
							btnEdit.setValue(dataRows[0].cpcodeid);
							btnEdit.setText(dataRows[0].cpcodeid);
							var row = grid.getSelected();
							grid.updateRow(row, {
								htId : index,
								htCode :dataRows[0].cpcodeid,
								cpcodeName:dataRows[0].cpcodename,
								cpcodeSize:dataRows[0].cpcodesize,
								/* cpcodeSizeEn:dataRows[0].cpcodesizeen, */
								cpcodeFl:dataRows[0].cpcodeflname,
								htJq :mini.formatDate(new Date(), "yyyy-MM-dd")
							});
	
							if (dataRows.length > 1) {
								for ( var i = 1; i < dataRows.length; i++) {
									var r = dataRows[i];
									var newRow = {
											htId : index+i,
											htCode :r.cpcodeid,
											cpcodeName:r.cpcodename,
											cpcodeSize: r.cpcodesize,
											/* cpcodeSizeEn:r.cpcodesizeen, */
											cpcodeFl:r.cpcodeflname,
											htJq :mini.formatDate(new Date(), "yyyy-MM-dd")
									};
									grid.addRow(newRow, 0);
								}
	
							}
							grid.clearSelect();
						}
					}
				}
			});
		}
	}
    
    /**
	 验证数量、金额不小于0
	 */
	function onCellValidation(e) {
    	
		if (e.field == "code") {
			if (isNull(e.value)) {
				e.isValid = false;
				e.errorText = "编码不能为空！";
				grid.beginEditCell(e.record, e.field);
				return hmq.tipDanger(e.errorText);
			}
		}
		
		if (e.field == "htId") {
			if(isNaN(e.value)){
				e.isValid = false;
				e.errorText = "序号必须为数字";
				grid.beginEditCell(e.record, e.field);
				return hmq.tipDanger(e.errorText);
			}
			if (isNull(e.value) || e.value <= 0) {
				e.isValid = false;
				e.errorText = "序号不能小于0";
				grid.beginEditCell(e.record, e.field);
				return hmq.tipDanger(e.errorText);
			}
		}
		if (e.field == "htSl") {
			if(isNaN(e.value)){
				e.isValid = false;
				e.errorText = "数量必须为数字";
				grid.beginEditCell(e.record, e.field);
				return hmq.tipDanger(e.errorText);
			}
			
			if (isNull(e.value) || e.value <= 0) {
				e.isValid = false;
				e.errorText = "数量不能小于0";
				grid.beginEditCell(e.record, e.field);
				return hmq.tipDanger(e.errorText);
			}
		}
		
		if (e.field == "htPrice") {
			if(isNaN(e.value)){
				e.isValid = false;
				e.errorText = "单价必须为数字";
				grid.beginEditCell(e.record, e.field);
				return hmq.tipDanger(e.errorText);
			}
			if (isNull(e.value) || e.value <=0) {
				e.isValid = false;
				e.errorText = "单价不能小于等于0";
				grid.beginEditCell(e.record, e.field);
				return hmq.tipDanger(e.errorText);
			}
		}
		
		if (e.field == "htJe") {
			if(isNaN(e.value)){
				e.isValid = false;
				e.errorText = "金额必须为数字";
				grid.beginEditCell(e.record, e.field);
				return hmq.tipDanger(e.errorText);
			}
			if (isNull(e.value) || e.value < 0) {
				e.isValid = false;
				e.errorText = "金额不能小于0";
				grid.beginEditCell(e.record, e.field);
				return hmq.tipDanger(e.errorText);
			}
		}
	}
   

	/**
	 汇总方法
	 */
	function onDrawSummaryCell(e) {
		if (e.field == "htCode") {
			var s = "<span style='color:Brown;'>";
			s += "合计:</span>";
			e.cellHtml = s;
		}
		if (e.field == "htSl") {
			e.cellHtml = "<span style='color:Brown;float:right;'>" + parseFloat(e.value).toFixed(3) + "</span>";
		}
		if (e.field == "htJs") {
			e.cellHtml = "<span style='color:Brown;float:right;'>" + parseFloat(e.value).toFixed(3) + "</span>";
		}
		if (e.field == "htJe") {
			e.cellHtml = "<span style='color:Brown;float:right;'>" + parseFloat(e.value).toFixed(2) + "</span>";
		}
	}
	
	function OnCellBeginEdit(e) {
		var record = e.record;
		var field = e.field;
	}
	
	/**
	 数量和单价联动自动生成金额
	 */
	function OnCellCommitEdit(e) {
		var editor = e.editor;
		editor.validate();
		if (editor.isValid() == false) {
			hmq.tipDanger(editor.getErrorText());
			e.cancel = true;
		}
		var grid = e.sender;
		var record = e.record;
		var field = e.field, value = e.value;
		if (field == "htSl"   || field == "htPrice" || field == "htJe"  ) {
			var price = getMiniValue(record.htPrice,0);
			var sl = getMiniValue(record.htSl, 0);
			var js = getMiniValue(record.htJs, 0);
			if (field == "htSl") {
				grid.updateRow(record, {
					htJe : value * price
				});
			}
			if (field == "htPrice") {
				grid.updateRow(record, {
					htJe : value * sl
				});
			}
			
		}
		
		

	}
  
	function getMiniValue(key, defaultValue) {
	    if (key == null || key == undefined || key == "") {
	        return defaultValue;
	    }
	    return key;
	}
	
	function getMiniDate(key) {
	    return mini.formatDate(new Date(key), "yyyy-MM-dd");
	}
	
	// 判读是否为空
	function isNull(key) {
	    if (key == null || key == undefined || key === "") {
	        return true;
	    }
	    return false;
	}
	function readOnly() {
   		var fields = form.getFields();
			for (var i = 0, l = fields.length; i < l; i++) {
            var c = fields[i];
            if (c.setReadOnly) c.setReadOnly(true);     //只读
            if (c.setIsValid) c.setIsValid(true);      //去除错误提示
            if (c.addCls) c.addCls("asLabel");          //增加asLabel外观
        }
	}
	
	/**
	 附件行
	 */
function appendRow(rows) {
	var retRows = [];
	for ( var i = 0; i < rows.length; i++) {
		if (!isEixsts(rows[i])) {
			retRows.push(rows[i]);
		} else {
			hmq.tipDanger("数据已添加");
		}
	}
	return retRows;
}
	/**
	判断是否存在
	*/
function isEixsts(data) {
	 var row = grid.findRow(function(row) {
		if (row.htCode == data.cpcodeid)
			return true;
	});
	if (row != null) {
		return true;
	} 
	return false;
}
	
</script>
</html>