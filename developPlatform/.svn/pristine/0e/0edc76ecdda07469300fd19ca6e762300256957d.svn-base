<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org" xmlns:tz="http://www.w3.org/1999/xhtml">
<head>
	<th:block th:replace="~{model/Head :: head(~{::title},_,_,${'miniui,common'})}">
		<title>销售合同【新增】</title>
	</th:block>
</head>
<body>
<div class="mini-fit">
	<form id="form1">
		<input id="action" name="action" class="mini-hidden"/>
		<input class="mini-hidden" name="htStype" id="htStype" width="100"/>
		<input class="mini-hidden" name="paramMod" id="paramMod" width="100"/>
		<table class="hmq-modify-table">
			<tr>
				<td title>合同编号：</td>
				<td content>
					<input class="mini-textbox" readonly id="htNo" name="htNo"/>
				</td>
				<td title>日 期：</td>
				<td content>
					<input class="mini-datepicker" readonly name="htDate" id="htDate" value="new Date()" />
				</td>
				<td title>销售客户：</td>
				<td content>
					<input readonly id="htCustomer" name="htCustomer" emptyText="请选择..."
						   allowInput="false" class="mini-buttonedit" onbuttonclick="onSupplierClick"/>
				</td>
			</tr>
		</table>
	</form>
	<div class="mini-fit">
		<div class="mini-splitter" style="width:100%;height:100%;">
			<div size="75%" showCollapseButton="false">
				<div tz:datagrid="datagrid" id="srch_bottom_left_grid" idField="htId" sortField="htId" sortOrder="asc"
					 url="/sale/domesticTrade/domesticTradeContract/getDetailedList"
					 allowCellEdit="true" allowCellSelect="true" multiSelect="true" editNextOnEnterKey="true" editNextRowCell="true" allowMoveColumn="true"
					 showPager="false"  OnCellCommitEdit="OnCellCommitEdit" allowCellValid="true" showColumnsMenu="true"
					 showSummaryRow="true" OnCellBeginEdit="OnCellBeginEdit" ondrawsummarycell="onDrawSummaryCell" allowSortColumn="false" onselectionchanged="onSelectionChanged">
					<div property="columns">
						<div tz:datagrid="checkcolumn" width="35"></div>
						<div tz:datagrid="column" field="htCode" align="center" width="100">编码 </div>
						<div tz:datagrid="column" field="cpcodeFl" name="cpcodeFl" align="left" width="80">大类</div>
						<div tz:datagrid="column" field="cpcodeXp" name="cpcodeXp" align="left" width="60">标重</div>
						<div tz:datagrid="column" field="cpcodeName" name="cpcodeName" align="left" width="120">名称</div>
						<div tz:datagrid="column" field="cpcodeSize" name="cpcodeSize" align="left" width="80">规格</div>
						<div tz:datagrid="column" field="cpcodeSizeEn" name="cpcodeSizeEn" align="left" width="60">品牌</div>
						<div tz:datagrid="column" field="htStandard"name="htStandard" width="80" align="left">执行标准</div>
						<div tz:datagrid="column" field="htReplyFlag" width="80" align="left">回复状态</div>
						<div tz:datagrid="column" field="htYjq" width="100" align="center">交期</div>
						<div tz:datagrid="column" field="htJq" width="100" align="center" headerStyle="color:red">交期
							<input property="editor" class="mini-datepicker"/>
						</div>
						<div tz:datagrid="column" field="htMo" width="150" align="left" visible="false"></div>
						<div tz:datagrid="column" field="htItemData" width="150" align="left" visible="false"></div>
						<div tz:datagrid="column" field="" width="100%"></div>
					</div>
				</div>
			</div>
			<div showCollapseButton="false">
				<div tz:datagrid="datagrid"  id ="srch_bottom_right_grid"    sortOrder="asc"
					 url="/sale/domesticTrade/domesticTradeContract/getSrchBottomList"
					 allowCellEdit="true" allowCellSelect="true" multiSelect="true" editNextOnEnterKey="true" editNextRowCell="true" allowMoveColumn="true"
					 showPager="false" allowCellValid="true" showColumnsMenu="true"
					 showSummaryRow="true" OnCellBeginEdit="OnCellBeginEdit" ondrawsummarycell="onDrawSummaryCell" allowSortColumn="false">
					<div property="columns">
						<div tz:datagrid="indexcolumn" width="35">序号</div>
						<div tz:datagrid="column" field="htMo"   visible="false">mo</div>
						<div tz:datagrid="column" field="htCode"   visible="false">编码</div>
						<div tz:datagrid="column" field="htItemCode"  displayField="htItemCodeName" align="right" width="80">项目</div>
						<div tz:datagrid="column" field="htItemValue" align="left" width="80"  >项目值</div>
						<div tz:datagrid="column" field="htItemValueReply" align="left" width="80" headerStyle="color:red" >回复
							<input property="editor" class="mini-textbox"/>
						</div>
						<div tz:datagrid="column" field="itemSid"   visible="false"></div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<div class="mini-toolbar hmq-toolbar">
	<a class="mini-button" onclick="SaveData" iconCls="icon-save" id="saveBtn">回复</a>
	<a class="mini-button" onclick="CloseWindow" iconCls="icon-cancel">关闭</a>
</div>
<th:block th:replace="~{model/Approval :: Approval() }"></th:block>
</body>
<script type="text/javascript">
	mini.parse();
	var form = new mini.Form('form1');
	var grid = mini.get('srch_bottom_left_grid');
	var srch_bottom_right_grid = mini.get('srch_bottom_right_grid');
	grid.on("beforedeselect", function (e) {
		var record = e.record;
		var datac = srch_bottom_right_grid.getChanges();
		if(datac.length>0){
			grid.updateRow(record,{
				htItemData: srch_bottom_right_grid.getData(),
				htReplyFlag:'已回复'
			});
		}else{

		}

	});
	function onSelectionChanged(e) {
		var srch_bottom_left_grid = e.sender;
		var record = srch_bottom_left_grid.getSelected();
		if (record) {
			srch_bottom_right_grid.setData(record.htItemData);
			/*var params = mini.encode({
                htMo: record.htMo,
                htNote: record.htNote,
                htCode: record.htCode
            });
            srch_bottom_right_grid.load({
                params: params
            });*/
		}
	}

	/**
	 保存
	 */
	function SaveData() {
		if (form.validate() && form.isValid()) {
			grid.validate();
			if (grid.isValid() == false) {
				var error = grid.getCellErrors()[0];
				grid.beginEditCell(error.record, error.column);
				return;
			}
			var entrydata = grid.getData();
			var deletedList = grid.getChanges('removed', false);
			$(entrydata).each(function (index) {
				entrydata[index].rightOrd = index;
				entrydata[index]._state = entrydata[index]._state || 'modified';
			});
			var method = 'add' == $('[name=action]').val() ? 'post' : 'put';
			$[method]("reply", JSON.stringify({
				eXsContract: form.getData(true),
				eXsContractDetailed: entrydata,
				deletedList: deletedList
			}), function (res) {
				if (200 === res.code) {
					hmq.tipSuccess(res.msg || '保存成功', {
						exec: function () {
							CloseWindow('refresh');
						}
					});
				} else {
					hmq.tipDanger(res.msg || '保存失败');
				}
			}, null, {
				contentType: 'application/json'
			});
		}
	}


	/**
	 回调函数
	 */
	function SetData(options) {
		if (true !== options.isApproval) {
			//普通口径
			var formData = options.data.formData;
			var row = options.data.row;
			mini.get("htStype").setValue(formData.htStype);
			mini.get("paramMod").setValue(formData.paramMod);

			//动态列转换
			hmq.business.dynamicProductParams(formData.htStype, {
				miniDataGrid: grid,
				success: function (map, res) {
				},
				error: function (res) {
					hmq.tipDanger(res.msg || '动态数据列加载失败,请检查配置!');
				}
			});
			if ('add' == options.action) {
				grid.clearData();
				$('[name=action]').val(options.action);
			} else if ('edit' == options.action || 'view' == options.action) {
				$.get("/sale/domesticTrade/domesticTradeContract/getByNote/{0}".format(row.htNo), function (res) {
					if (200 === res.code) {
						form.setData(res.data);
						var data = mini.decode(res.data);
						mini.get("htCustomer").setText(data.htCustomerName);

						grid.load({
							params: JSON.stringify({htNo: form.getField('htNo').getValue()})
						});
						if (options.action == 'view') {
							//禁用grid编辑
							grid.setAllowCellEdit(false);
							mini.get("addBtn").setVisible(false);
							mini.get("delBtn").setVisible(false);
							mini.get("delAllBtn").setVisible(false);
							mini.get("saveBtn").setVisible(false);
							mini.get("htCustomer").disable();
							mini.get("htDate").disable();
							mini.get("htTax").disable();
							mini.get("htItemType").disable();
							mini.get("htCurrency").disable();
							mini.get("htTax").disable();
						}
					}
				});
			}
		} else {//审批口径
			$.get("/sale/domesticTrade/domesticTradeContract/getByNote/{0}".format(options.data.businessId), function (res) {
				if (200 === res.code) {
					form.setData(res.data);
					var data = mini.decode(res.data);
					mini.get("htCustomer").setText(data.htCustomerName);

					grid.load({
						params: JSON.stringify({htNo: form.getField('htNo').getValue()})
					});
					mini.get("addBtn").setVisible(false);
					mini.get("delBtn").setVisible(false);
					mini.get("delAllBtn").setVisible(false);
					mini.get("saveBtn").setVisible(false);
					mini.get("htCustomer").disable();
					mini.get("htDate").disable();
					mini.get("htTax").disable();
					mini.get("htItemType").disable();
					mini.get("htCurrency").disable();
					mini.get("htTax").disable();
				}
			}, null, null, {
				complete: function () {
					//表单只读
					setFormReadOnly(form);
					//禁用grid编辑
					grid.setAllowCellEdit(false);
					//隐藏按钮区域
					$('.mini-toolbar.hmq-toolbar').hide();
					//动态列转换
					hmq.business.dynamicProductParams(form.getField('htStype').getValue(), {
						miniDataGrid: grid,
						success: function (map, res) {
						},
						error: function (res) {
							hmq.tipDanger(res.msg || '动态数据列加载失败,请检查配置!');
						}
					});
				}
			});
		}
	}




	/**
	 汇总方法
	 */
	function onDrawSummaryCell(e) {
		if (e.field == "htCode") {
			var s = "<span style='color:Brown;'>";
			s += "合计:</span>";
			e.cellHtml = s;
		}
		if (e.field == "htSl") {
			e.cellHtml = "<span style='color:Brown;float:right;'>" + parseFloat(e.value).toFixed(4) + "</span>";
		}
		if (e.field == "htJs") {
			e.cellHtml = "<span style='color:Brown;float:right;'>" + parseFloat(e.value).toFixed(2) + "</span>";
		}
		if (e.field == "htJe") {
			e.cellHtml = "<span style='color:Brown;float:right;'>" + parseFloat(e.value).toFixed(2) + "</span>";
		}
	}

	function OnCellBeginEdit(e) {
		var record = e.record;
		var field = e.field;
	}

	/**
	 数量和单价联动自动生成金额
	 */
	function OnCellCommitEdit(e) {
		var editor = e.editor;
		editor.validate();
		if (editor.isValid() == false) {
			hmq.tipDanger(editor.getErrorText());
			e.cancel = true;
		}
		var grid = e.sender;
		var record = e.record;
		var field = e.field, value = e.value;
		if (field == "htSl" || field == "htPrice" || field == "htJe") {
			var price = getMiniValue(record.htPrice, 0);
			var sl = getMiniValue(record.htSl, 0);
			var js = getMiniValue(record.htJs, 0);
			if (field == "htSl") {
				grid.updateRow(record, {
					htJe: value * price
				});
			}
			if (field == "htPrice") {
				grid.updateRow(record, {
					htJe: value * sl
				});
			}

		}


	}

	function getMiniValue(key, defaultValue) {
		if (key == null || key == undefined || key == "") {
			return defaultValue;
		}
		return key;
	}

	function getMiniDate(key) {
		return mini.formatDate(new Date(key), "yyyy-MM-dd");
	}

	// 判读是否为空
	function isNull(key) {
		if (key == null || key == undefined || key === "") {
			return true;
		}
		return false;
	}

	function readOnly() {
		var fields = form.getFields();
		for (var i = 0, l = fields.length; i < l; i++) {
			var c = fields[i];
			if (c.setReadOnly) c.setReadOnly(true);     //只读
			if (c.setIsValid) c.setIsValid(true);      //去除错误提示
			if (c.addCls) c.addCls("asLabel");          //增加asLabel外观
		}
	}

	/**
	 附件行
	 */
	function appendRow(rows) {
		var retRows = [];
		for (var i = 0; i < rows.length; i++) {
			if (!isEixsts(rows[i])) {
				retRows.push(rows[i]);
			} else {
				hmq.tipDanger("数据已添加");
			}
		}
		return retRows;
	}

	/**
	 判断是否存在
	 */
	function isEixsts(data) {
		var row = grid.findRow(function (row) {
			if (row.htCode == data.cpcodeid)
				return true;
		});
		if (row != null) {
			return true;
		}
		return false;
	}
	function termsAdd(){

	}

</script>
</html>