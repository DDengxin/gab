package com.tengzhi.business.finance.capitalManager.capitalType.service.impl;

import com.tengzhi.base.jpa.dto.BaseDto;
import com.tengzhi.base.jpa.extension.SqlJoint;
import com.tengzhi.base.jpa.page.BasePage;
import com.tengzhi.base.security.common.model.SessionUser;
import com.tengzhi.business.finance.capitalManager.capitalType.dao.CapitalTypeDao;
import com.tengzhi.business.finance.capitalManager.capitalType.model.EFVoucherCapitaltype;
import com.tengzhi.business.finance.capitalManager.capitalType.service.CapitalTypeService;
import com.tengzhi.business.project.projectProcess.projectTask.model.EXmXmrw;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import javax.transaction.Transactional;
import java.io.IOException;
import java.util.Map;
import java.util.UUID;

@Service
@Transactional
public class CapitalTypeServiceImpl implements CapitalTypeService {

    @Autowired
    private CapitalTypeDao dao;

    @Override
    public EFVoucherCapitaltype save(EFVoucherCapitaltype model) throws Exception {
        model.setDataCorp(SessionUser.SessionUser().getCorpId());
        model.setSid(UUID.randomUUID().toString());
        return dao.save(model);
    }

    @Override
    public BasePage<EFVoucherCapitaltype> getList(BaseDto baseDto) throws IOException {
        Map<String,String> map = baseDto.getParamsMap();
        String where = SqlJoint.whereSuffixWhere(item->{
            item.eq("data_corp",SessionUser.SessionUser().getCorpId());
            item.contains("code",map.get("code"));
            item.contains("name",map.get("name"));
        });
        String sql = " select * from e_f_voucher_capitaltype "+where;
        return dao.QueryPageLists(baseDto , sql );
    }

    @Override
    public EFVoucherCapitaltype findById(String sid) {
        return dao.QueryToFirstBean(" select * from e_f_voucher_capitaltype where sid='"+sid+"' ");
    }

    @Override
    public void update(EFVoucherCapitaltype model) {
        EFVoucherCapitaltype dbModel = dao.findById(model.getSid()).orElse(null);
        dao.dynamicSave(model, dbModel);
    }

    @Override
    public void deleteByNote(String cId) {
        dao.deleteById(cId);
    }
}
