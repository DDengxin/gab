<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org" xmlns:tz="http://www.w3.org/1999/xhtml">
    <head>
        <th:block th:replace="~{model/Head :: head(~{::title},_,_,${'miniui,common'})}">
            <title>需求通知【新增】</title>
        </th:block>
    </head>
    <body>
        <div class="mini-fit">
            <form id="form1">
                <input name="action" class="mini-hidden"/>
                <input name="codeType" class="mini-hidden"/>
                <input name="outType" class="mini-hidden"/>
                <table class="hmq-modify-table">
                    <tr>
                        <td >单号：</td>
                        <td>
                            <input class="mini-textbox" name="outNote" readonly emptyText="自动生成"/>
                        </td>
                        <td >日 期：</td>
                        <td>
                            <input class="mini-datepicker" name="outRq" value="new Date()" required/>
                        </td>
                        <td title>委外合同：</td>
		                <td content>
		                    <input required id="outContract" name="outContract"   emptyText="请选择..." 
		                           allowInput="false" class="mini-buttonedit" onbuttonclick="onButtonEdit"  />
		                </td>
                        <td title>供货单位：</td>
		                <td content>
		                    <input required id="outCustomer" name="outCustomer"   emptyText="请选择..." readonly="readonly" 
		                           allowInput="false" class="mini-buttonedit"/>
		                </td>
                        <td>库房：</td>
                        <td>
                            <input class="mini-combobox" name="outLib" required/>
                        </td>
                    </tr>
                </table>
            </form>

            <div tz:datagrid="datagrid" id="detail-grid" idField="fhCode"
                 style="width: 100%; height: 450px;"
                 url="/sale/saleProduct/saleDeliveryNotice/getSrchBottomList"
                 allowCellEdit="true" allowCellSelect="true" multiSelect="true"
                 editNextOnEnterKey="true" editNextRowCell="true" allowMoveColumn="true"
                 showPager="false" allowCellValid="true"
                 showColumnsMenu="true" showSummaryRow="true" oncellvalidation="onCellValidation"
                 ondrawsummarycell="onDrawSummaryCell" sortMode="client">
                <div property="columns">
                    <div width="35" type="checkcolumn" headerAlign="center" ></div>
					<div width="35" type="indexcolumn" headerAlign="center" ></div>
                    <div field="outCode" align="center" width="100" sortField="outCode" displayField="outCode" headerAlign="center" allowSort="true">编码</div>
                    <div field="cpcodeName" name="cpcodeName"align="left" width="120" sortField="cpcodeName" displayField="cpcodeName" headerAlign="center" allowSort="true">名称</div>
                    <div field="cpcodeSize" name="cpcodeSize"align="left" width="120" sortField="cpcodeSize" displayField="cpcodeSize" headerAlign="center" allowSort="true">规格</div>
                    <div field="cpcodeXp" name="cpcodeXp" align="left" width="120" sortField="cpcodeXp" displayField="cpcodeXp" headerAlign="center" allowSort="true">标重</div>
                    <div field="cpcodeSizeEn" name="cpcodeSizeEn" align="left" width="80" sortField="cpcodeSizeEn" displayField="cpcodeSizeEn" headerAlign="center" allowSort="true"  >品牌</div> 
                    <div field="cpcodeFl" name ="cpcodeFl" align="left" width="120" sortField="cpcodeFl" displayField="cpcodeFl" headerAlign="center" allowSort="true">大类</div>
                    <div field="outJs" align="right" width="80" numberFormat="#,0.00" summaryType="sum" sortField="outJs" displayField="outJs" headerAlign="center" allowSort="true">件数</div>
                    <div field="outSl" width="80" align="right"  numberFormat="#,0.0000" summaryType="sum" sortField="outSl" displayField="outSl" headerAlign="center" allowSort="true" vtype="float,required">数量
                    	<input property="editor" class="mini-textbox"  />
                    </div>
                    <div field="outRemarks"   width="220" sortField="outRemarks" displayField="outRemarks" headerAlign="center" allowSort="true" align="left"   >备注
                    	<input id="outRemarks"  property="editor" class="mini-textbox"  />
                    </div>
                    <div field="outPrice" width="150" align="left"visible="false" sortField="outPrice" displayField="outPrice" headerAlign="center" allowSort="true" ></div>
                    <div field="outHs" width="150" align="left"visible="false" sortField="outHs" displayField="outHs" headerAlign="center" allowSort="true" ></div>
                    <div field="outBz" width="150" align="left"visible="false" sortField="outBz" displayField="outBz" headerAlign="center" allowSort="true" ></div>
                    <div field="outTax" width="150" align="left"visible="false" sortField="outTax" displayField="outTax" headerAlign="center" allowSort="true" ></div>
                    <div field="outType" width="150" align="left"visible="false" sortField="outType" displayField="outType" headerAlign="center" allowSort="true" ></div>
                    <div field="" width="100%" headerAlign="center" allowSort="true" align="left" ></div>
                </div>
            </div>
        </div>
        <div class="mini-toolbar hmq-toolbar">
            <a class="mini-button" onclick="addRow" iconCls="icon-add" id="addBtn">增行</a>
            <a class="mini-button" onclick="delRow" iconCls="icon-remove" id="delBtn">删行</a>
            <a class="mini-button" onclick="delAll" iconCls="icon-remove" id="delAllBtn">删单</a>
            <a class="mini-button" onclick="SaveData" iconCls="icon-save" id="saveBtn">保存</a>
            <a class="mini-button" onclick="CloseWindow" iconCls="icon-cancel">关闭</a>
        </div>
    </body>
    <script type="text/javascript">
        mini.parse();
        var form = new mini.Form('form1');
        var detail_grid = mini.get('detail-grid');

        /**
         * 页面初始化
         **/
        function SetData(options) {
            var formData = options.data.formData;
            var row = options.data.row;
            
            form.getField("codeType").setValue(formData.codeType);
            form.getField("outType").setValue(formData.codeType);
            form.getField('outLib').setUrl("/system/parameter/getParamsSelectListByParentId/仓库/{0}".format(formData.codeType));
            form.getField('outLib').select(0);
            form.getField('action').setValue(options.action);
            setTimeout(function(){AutoResizePopupWindow(window.self,true,true);},100);
            //动态列转换
			hmq.business.dynamicProductParams(formData.codeType, {
				miniDataGrid:detail_grid,
				success: function (map, res) {
				},
				error: function (res) {
					hmq.tipDanger(res.msg || '动态数据列加载失败,请检查配置!');
				}
			});
            if ('add' == options.action) {
				
            }else if (!!~['edit','view'].indexOf(options.action)) {
                $.post('/sc/task/pick/raw/demandNotice/getById',{ fhNote:row.fhNote, fhCode:row.fhCode },function(res){
                    if(200 == res.code){
                        detail_grid.setData(res.data);
                        if(res.data.length > 0){
                            var formData = res.data[0];
                            form.setData(formData);
                        }
                    }
                },null,{
                    loading:true,
                    complete:function(){
                        if(detail_grid.getData().length > 0){
                            setFormEnabled(form, "fhRq,fhCustomer,fhLib", false);
                        }
                    }
                });
            }
        }



        /**
         * 品号弹出选择框
         **/
        function onWlCodeButtonClickHandler(e) {
            var btnEdit = e.sender;
            return miniopen({
                targetWindow: window.top,
                url: "/sc/task/sctask/productionTaskSelectList.html",
                title: "编码选择列表",
                width: 1300,
                height: 620,
                data: {
                    wlType: form.getField('fhType').getValue(),
                    wlLib: form.getField('fhLib').getValue(),
                },
                ondestroy: function (action) {
                    if (action == "ok") {
                        var iframe = this.getIFrameEl();
                        var rows = mini.clone(iframe.contentWindow.GetMutiData());
                        var needAppendRows = getNeedAppendRows(rows);
                        if (needAppendRows.length > 0) {
                            for (var i = 0; i < needAppendRows.length; i += 1) {
                                var row = needAppendRows[i];
                                var rowData = {
                                    fhCode: row.wlCode,
                                    fhType: row.wlType,
                                    fhSl: row.wlSl,
                                    //wlZl: row.wlZl,
                                    fhLib: row.wlLib,
                                    fhHs:row.cpcode02,
                                    cpcodeBz:row.cpcodeBz,
                                    cpcodeSize:row.cpcodeSize,
                                    fhCodeName:row.cpcodeName,
                                    fhLibName: row.wlLibName,
                                    wlTypeName: row.wlTypeName,
                                    cpcodeFl:row.cpcodeFl
                                };
                                if(0 == i && null != detail_grid.getSelected()){
                                    var currentRow = detail_grid.getSelected();
                                    detail_grid.cancelEdit();
                                    detail_grid.updateRow(currentRow,rowData);
                                }else{
                                    detail_grid.addRow(rowData, 0);
                                }
                            }
                        }
                    }
                }
            });
        }

        /**
         * 新增行
         */
        function addRow() {
            if (hmq.isEmpty(form.getField("outCustomer").getValue())) {
                hmq.tipDanger("请先选择供货单位！");
            }  else if (hmq.isEmpty(form.getField("outLib").getValue())) {
                hmq.tipDanger("请先选择库房！");
            } else {
                var index = detail_grid.getData().length;
                detail_grid.addRow({}, index + 1);
                setFormEnabled(form, "outCustomer,outLib", false);
            }
        }

        /**
         * 删除行
         */
        function delRow() {
            var rows = detail_grid.getSelecteds();
            if (rows.length > 0) {
                detail_grid.removeRows(rows, true);
                if (detail_grid.getData() == "") {
                    setFormEnabled(form, "fhCustomer,fhLib", true);
                }
            } else {
                hmq.tipDanger('请选择需要删除的行！');
            }
        }

        /**
         * 删除整单
         */
        function delAll() {
        	var note = mini.get("fhNote").getValue();
        	var rows = detail_grid.getData();
            if (note.length > 0) {
                mini.confirm("确定删除整单吗？", "提示信息", function (returndata) {
                    if (returndata == "ok") {
                        if (rows.length > 0) {
                            detail_grid.removeRows(rows, true);
                        }
                        mini.get("delAllBtn").disable();
                        $['delete']("delete/{0}".format(note), function (res) {
                            if (200 === res.code) {
                                hmq.tipSuccess(res.msg || '删除成功', {
                                    exec: function () {
                                        CloseWindow('refresh');
                                    }
                                });
                            } else {
                                hmq.tipDanger(res.msg || '删除失败');
                            }
                        });
                    }
                });
            } else {
                if (rows.length > 0) {
                    detail_grid.removeRows(rows, true);
                    if (detail_grid.getData() == "") {
                        setFormEnabled(form, "fhCustomer,fhLib", true);
                    }
                }
            }
        }

        /**
         * 保存
         */
        function SaveData() {
            if (form.validate() && form.isValid()) {
                detail_grid.validate();
				if (detail_grid.isValid() == false) {
					var error = detail_grid.getCellErrors()[0];
					detail_grid.beginEditCell(error.record, error.column);
					return;
				}
	            var entrydata = detail_grid.getChanges();
	            var deletedList = detail_grid.getChanges('removed',false);
	            $(entrydata).each(function (index) {
	            	entrydata[index].rightOrd = index;
	            	entrydata[index]._state = entrydata[index]._state || 'modified';
	            });
	            var method = 'add' == $('[name=action]').val() ? 'post' : 'put';
	            $[method]("add.html", JSON.stringify({
	            	eCkOut: form.getData(true),
	            	eckOutMx: entrydata,
	                deletedList:deletedList
	            }), function (res) {
	                if (200 === res.code) {
	                    hmq.tipSuccess(res.msg || '保存成功', {
	                        exec: function () {
	                            CloseWindow('refresh');
	                        }
	                    });
	                } else {
	                    hmq.tipDanger(res.msg || '保存失败');
	                }
	            }, null, {
	                contentType: 'application/json'
	            });
            }
        }

        /**
         汇总方法
         */
        function onDrawSummaryCell(e) {
            if (e.field == "fhCode") {
                e.cellHtml = "<span style='color:Brown;'>合计:</span>";
            } else if (!!~['fhSl', 'wlZl'].indexOf(e.field)) {
                e.cellHtml = "<span style='color:Brown;float:right;'>" + parseFloat(e.value).toFixed(4) + "</span>";
            }
        }

        /**
         * 获取需要添加的行数据(通过主键排除已经存在的行数据)
         * @param rows 需要添加的行数据
         **/
        function getNeedAppendRows(rows) {
            var $rows = $(rows);
            var notExistRows = $rows.filter(function (index, row) {
                return detail_grid.findRows(function (rrow) {
                    return (row.wlCode == rrow.fhCode);
                }) <= 0;
            });
            return (notExistRows || $([])).toArray();
        }
        
        /**
        * 供货单位选择页面
        */
        function onSupplierClick(e) {
	        var btnEdit = e.sender;
	        return miniopen({
	            targetWindow: window.top,
	            url: "/cg/yw/purchaseFile/purchaseContract/supplierselectlist.html",
	            title: "【供货单位】选择页面",
	            width: 750,
	            data: "S",
	            height: 620,
	            ondestroy: function (action) {
	                if (action == "ok") {
	                    var iframe = this.getIFrameEl();
	                    var data = iframe.contentWindow.GetData();
	                    btnEdit.setValue(data.customerId);
	                    btnEdit.setText(data.customerExp);
	                }
	            }
	        });
	    }
	    
	    /**
	    * 委外合同选择框
	    */
    	function onButtonEdit(e) {
    		var btnEdit = this;
        	var codeType = form.getField("codeType").getValue();
            var parms = {
                cgStype: form.getField("codeType").getValue(),
            };
            return miniopen({
                targetWindow: window.top,
                url: "/production/subcontract/wwfl/wwhtsingleselectlist.html",
                title: "委外加工合同选择列表",
                width: 1300,
                height: 620,
                onload: function () {
                    var iframe = this.getIFrameEl();
                    var data = {
                        action: "search",
                        sid: parms
                    };
                    iframe.contentWindow.SetData(data);
                },
                ondestroy: function (action) {
                    if (action == "ok") {
                        var iframe = this.getIFrameEl();
                        var row = iframe.contentWindow.GetData();
                        row = mini.clone(row); //必须
                        if(row){
                       		btnEdit.setValue(row.htmo);
                            btnEdit.setText(row.htmo);
                            mini.get("")
                        }
                        if (dataRows.length > 0) {
                            btnEdit.setValue(dataRows[0].htmo);
                            btnEdit.setText(dataRows[0].htmo);
                            var row = detail_grid.getSelected();
                            detail_grid.updateRow(row, {
                                outContract: dataRows[0].htmo,
                                outCode: dataRows[0].htcode,
                                cpcodeName: dataRows[0].cpcode_name,
                                cpcodeSize: dataRows[0].cpcode_size,
                                cpcodeBz: dataRows[0].cpcodebz,
                                cpcodeSizeEn: dataRows[0].cpcode_size_en,
                                cpcodeXp:dataRows[0].cpcode_xp,
                                cpcodeFl:dataRows[0].cpcode_fl,
                                outSl: dataRows[0].wssl,
                                outJs: 1,
                                outZl: 0,
                                outPrice: dataRows[0].htprice,
                                outType: codeType,
                                outBz: dataRows[0].htbz,
                                outTax: dataRows[0].httax
                            });
                            detail_grid.clearSelect();
                        }
                    }
                }
            });
    	}
    	
    	function appendRow(rows) {
	        var retRows = [];
	        for (var i = 0; i < rows.length; i++) {
	            if (!isEixsts(rows[i])) {
	                retRows.push(rows[i]);
	            } else {
	                hmq.tipDanger("数据已添加");
	            }
	        }
	        return retRows;
	    }
	
	    /**
	     判断是否存在
	     */
	    function isEixsts(data) {
	        var row = detail_grid.findRow(function (row) {
	            if (row.inContract == data.htmo)
	                return true;
	        });
	        if (row != null) {
	            return true;
	        }
	        return false;
	    }
	
		/**
		 验证数量、金额不小于0
		 */
		function onCellValidation(e) {
			if (e.field == "outCode") {
				if (isNull(e.value)) {
					e.isValid = false;
					e.errorText = "编码不能为空！";
					detail_grid.beginEditCell(e.record, e.field);
					return hmq.tipDanger(e.errorText);
				}
			}
			if (e.field == "outSl") {
				if(isNaN(e.value)){
					e.isValid = false;
					e.errorText = "数量必须为数字";
					detail_grid.beginEditCell(e.record, e.field);
					return hmq.tipDanger(e.errorText);
				}
				
				if (isNull(e.value) || e.value < 0) {
					e.isValid = false;
					e.errorText = "数量不能小于0";
					detail_grid.beginEditCell(e.record, e.field);
					return hmq.tipDanger(e.errorText);
				}
			}
		}
    </script>
</html>