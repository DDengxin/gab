<!DOCTYPE html>
<html lang="en" xmlns:th="http://www.thymeleaf.org">

<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>产品</title>
	<link rel="stylesheet" type="text/css" th:href="@{/static/gab/font/iconfont.css}" />
	<link rel="stylesheet" type="text/css" th:href="@{/static/gab/css/basic.css}" />
	<link rel="stylesheet" type="text/css" th:href="@{/static/gab/layui/css/layui.css}" />
	<link rel="stylesheet" type="text/css" th:href="@{/static/gab/css/supply.css}" />
	<link rel="stylesheet" type="text/css" th:href="@{/static/gab/css/supplyProDetails.css}" />
	<script type="text/javascript" th:src="@{/static/gab/js/jquery.min.js}"></script>
	<script type="text/javascript" th:src="@{/static/gab/js/jquery.autocompleter.js}"></script>
	<script type="text/javascript" th:src="@{/static/gab/js/public.js}"></script>
	<script type="text/javascript" th:src="@{/static/gab/layui/layui.js}"></script>
	<script type="text/javascript" th:src="@{/static/script/laytpl/laytpl.js}"></script>
	<script type="text/javascript" th:src="@{/static/gab/js/three.js}"></script>
	<script type="text/javascript" th:src="@{/static/gab/js/DDSLoader.js}"></script>
	<script type="text/javascript" th:src="@{/static/gab/js/MTLLoader.js}"></script>
	<script type="text/javascript" th:src="@{/static/gab/js/OBJLoader.js}"></script>
	<script type="text/javascript" th:src="@{/static/gab/js/supplyProDetails.js}"></script>
</head>

<body>
	<th:block th:replace="~{gab/common/CommonHead:: CommonHead}">
	</th:block>
	<div class="supply_content">
		<div class="supply_content_list">
			<!-- <div class="tabContainer">
				<div id="tablist">
					<div class="company">
						<p class="name" th:text="${Supply.supplyName}"></p>
						<p class="collect">
							<i class="iconfont icon-xingxing"></i>
							我要收藏
						</p>
					</div>
					<div class="list">
						<a href="javascript:void(0);" class="tabin">企业介绍</a>
						<a href="javascript:void(0);">服务产品</a>
						<a href="javascript:void(0);">客户档案</a>
						<a href="#">在线报价</a>
					</div>
				</div>
			</div> -->
			<div class="content-box">
				<h2>产品名称</h2>
				<div class="fl">
					<div class="product_content">
						<div class="proName">
							<h3 th:text="${Product.cpcodeName}"></h3>
							<div class="collect">
								<i class="iconfont icon-xingxing"></i>
								<b>我要收藏</b>
							</div>
						</div>
						<div class="left">
							<div Id="productInformation">
								<input type="hidden" id="productId" th:value="${Product.cpcodeId}">
								<input type="hidden" id="dataMan" th:value="${Product.dataMan}">
								<!--cpcodeFl: "夹具分类"
								cpcodeSize: "夹具工位"
								cpcodeSizeEn: "夹具动力"
								cpcodeName: "夹具名称"-->
								<p th:text="${product.cpcodeFl}+：+${Product.cpcodeFname}"></p>
								<p th:text="${product.cpcodeXp}+：+${Product.cpcodeXpName}"></p>
								<p th:text="|${product.cpcodeSizeEn}：${Product.cpcodeSizeEn}|"></p>
								<p th:text="|产品单价：${Product.cpcodePrice}|"></p>
								<p th:text="|销售量：${Product.productSales}|"></p>
								<p th:text="|特殊要求：${Product.cpcodeSm}|"></p>
								<p th:text="|其他参数：${Product.cpcode03}|"></p>
							</div>
							<p>公司名称：<a href="#" th:text="${Supply.supplyName}" id="productCompany"
									th:if="${not #strings.isEmpty(Supply.supplyName)}"></a></p>
							<ul>
								<li><a href="javascript:void(0);" onclick="addToCart();">加入购物车</a></li>
								<!-- <li><a th:href="'/gab/order.html?productId='+${Product.cpcodeId}">我要购买</a></li> -->
							</ul>
						</div>
						<div class="right">
							<img th:src="|/system/setting/image?line_primary=${Product.coverPicture}|" alt=""
								default-img="/static/gab/images/wt.png">
						</div>
					</div>
					<!-- 业务介绍 -->
					<div class="content" id="introduce">
						<p class="showContent">产品介绍</p>
						<div class="details" th:utext="${Product.productDescription}"></div>
						<div id="three"></div>
					</div>
					<div class="content">
						<p class="showContent">服务介绍</p>
						<div class="details" th:utext="${Product.serviceDescription}"></div>
					</div>
					<!-- 综合评价 -->
					<div class="content" id="comment">
						<p class="showContent">综合评价</p>
						<dl>
							<dt>
								<p>
									综合好评率：<b>82.5</b>
								</p>
							</dt>
							<dd>
								<p>任务质量：4.00分</p>
								<div id="quantity"></div>
							</dd>
							<dd>
								<p>响应速度：4.00分</p>
								<div id="speed"></div>
							</dd>
							<dd>
								<p>服务态度：4.00分</p>
								<div id="attitude"></div>
							</dd>
						</dl>
						<div class="comment_list">
							<div class="comment_peo">
								<div class="comment_peo_list">
									<div class="rate">
										<p id="rate1"></p>
										<b>5.00分</b>
									</div>
									<p>2018-06-13 13:59:00</p>
									<p>合作愉快</p>
								</div>
								<div class="comment_peo_name">用户名</div>
							</div>

							<div class="comment_peo">
								<div class="comment_peo_list">
									<div class="rate">
										<p id="rate2"></p>
										<b>5.00分</b>
									</div>
									<p>2018-06-13 13:59:00</p>
									<p>合作愉快</p>
								</div>
								<div class="comment_peo_name">用户名</div>
							</div>

						</div>
					</div>
				</div>
				<div class="fr">
					<div class="re-company">
						<p class="topic"><a href="#" th:text="${Supply.supplyName}"
								th:if="${not #strings.isEmpty(Supply.supplyName)}"></a></p>
						<img th:src="${Supply.headImg}" alt="" default-img="/static/gab/images/wt.png">
						<p class="business" th:text="${Supply.supplyInfo}"></p>
						<p class="key">关键词：<b th:text="${Supply.keyWord!=null?Supply.keyWord:'暂无'}"></b></p>
					</div>
					<div class="concat">
						<p class="topic">联系我们</p>
						<p th:text="地址：+${Supply.supplyAddress}">地址：广东省深圳大道199号</p>
						<a href="#"><i class="iconfont icon-zhangdan"></i>我的需求</a>
						<a href="#"><i class="iconfont icon-xinxi"></i>我想咨询</a>
						<a href="#"><i class="iconfont icon-dian_hua"></i>电话咨询</a>
					</div>

					<div class="case">
						<p class="topic">客户案例</p>
						<ul>
							<li th:each="item:${Advisory}">
								<a th:href="@{'/gab/academic.html?reqId='+${item.articleId}+'&classify=技术案例'}">
									<span th:text="${item.title}"></span>
								</a>
							</li>
						</ul>
					</div>
				</div>
			</div>
		</div>
	</div>
	<th:block th:replace="~{gab/common/CommonFooter:: CommonFooter}">
	</th:block>
</body>
<script th:inline="javascript">
	(function () {
		$.get("/platform/form/getdynamicFormValue/" + [[${ Product.cpcodeXp }]] + "/" + [[${ Product.cpcodeId }]] + "/e_js_cpcode", function (res) {
			console.log(res)
			if (200 === res.code) {
				for (var key in res.data) {
					if (res.data.hasOwnProperty(key)) {
						$("#productInformation").append("<p>" + key + ":" + res.data[key] + "</p>")
					}
				}
			}
		});
	})()
</script>

<script>
	var container;

	var camera, scene, renderer;

	var target = new THREE.Vector3();

	var mouseX = 0, mouseY = 0;

	var lon = 90, lat = 0;
	var phi = 0, theta = 0;

	var touchX, touchY;

	var windowHalfX = $('#three').width() / 2;
	var windowHalfY = $('#three').height() / 2;


	init();
	animate();


	function init() {
		camera = new THREE.PerspectiveCamera(45, $('#three').width() / $('#three').height(), 1, 4000);
		camera.position.z = 250;

		// scene

		scene = new THREE.Scene();

		var ambientLight = new THREE.AmbientLight(0xcccccc, 0.4);
		scene.add(ambientLight);

		var pointLight = new THREE.PointLight(0xffffff, 0.8);
		camera.add(pointLight);
		scene.add(camera);

		// model

		var onError = function (error) { console.log(error) };

		var manager = new THREE.LoadingManager();
		// manager.addHandler(/\.dds$/i, new DDSLoader());

		new THREE.MTLLoader()
			.load('/static/gab/threeCase/AC4V7-ROO.mtl', function (materials) {
				materials.preload();

				new THREE.OBJLoader()
					.setMaterials(materials)
					.load('/static/gab/threeCase/AC4V7-ROO.obj', function (object) {

						object.position.y = - 95;
						scene.add(object);

					}, onError);

			});

		//

		renderer = new THREE.WebGLRenderer();
		renderer.setPixelRatio(window.devicePixelRatio);
		renderer.setSize($('#three').width(), $('#three').height());
		$('#three').append(renderer.domElement);


		document.addEventListener('mousedown', onDocumentMouseDown, false);
		document.addEventListener('wheel', onDocumentMouseWheel, false);

		document.addEventListener('touchstart', onDocumentTouchStart, false);
		document.addEventListener('touchmove', onDocumentTouchMove, false);

		//

		window.addEventListener('resize', onWindowResize, false);

	}

	function onWindowResize() {

		windowHalfX = $('#three').width() / 2;
		windowHalfY = $('#three').height() / 2;

		camera.aspect = $('#three').width() / $('#three').height();
		camera.updateProjectionMatrix();

		renderer.setSize($('#three').width(), $('#three').height());

	}

	// function onDocumentMouseMove(event) {

	// 	mouseX = (event.offsetX - windowHalfX) / 2;
	// 	mouseY = (event.offsetY - windowHalfY) / 2;

	// }

	// function onWindowResize() {

	// 	camera.aspect = window.innerWidth / window.innerHeight;
	// 	camera.updateProjectionMatrix();

	// 	renderer.setSize(window.innerWidth, window.innerHeight);

	// }

	function onDocumentMouseDown(event) {

		event.preventDefault();

		document.addEventListener('mousemove', onDocumentMouseMove, false);
		document.addEventListener('mouseup', onDocumentMouseUp, false);

	}

	function onDocumentMouseMove(event) {

		var movementX = event.movementX || event.mozMovementX || event.webkitMovementX || 0;
		var movementY = event.movementY || event.mozMovementY || event.webkitMovementY || 0;

		lon -= movementX * 0.1;
		lat += movementY * 0.1;

	}

	function onDocumentMouseUp(event) {

		document.removeEventListener('mousemove', onDocumentMouseMove);
		document.removeEventListener('mouseup', onDocumentMouseUp);

	}

	function onDocumentMouseWheel(event) {

		camera.fov += event.deltaY * 0.05;
		camera.updateProjectionMatrix();

	}

	function onDocumentTouchStart(event) {

		event.preventDefault();

		var touch = event.touches[0];

		touchX = touch.screenX;
		touchY = touch.screenY;

	}

	function onDocumentTouchMove(event) {

		event.preventDefault();

		var touch = event.touches[0];

		lon -= (touch.screenX - touchX) * 0.1;
		lat += (touch.screenY - touchY) * 0.1;

		touchX = touch.screenX;
		touchY = touch.screenY;

	}




	//

	function animate() {
		requestAnimationFrame(animate);

		// lat +=  0.1;
		lat = Math.max(- 85, Math.min(85, lat));
		phi = THREE.Math.degToRad(90 - lat);
		theta = THREE.Math.degToRad(lon);

		target.x = Math.sin(phi) * Math.cos(theta);
		target.y = Math.cos(phi);
		target.z = Math.sin(phi) * Math.sin(theta);

		camera.lookAt(target);
		/**
		 * 通过传入的scene和camera
		 * 获取其中object在创建时候传入的element信息
		 * 以及后面定义的包括位置，角度等信息
		 * 根据场景中的obj创建dom元素
		 * 插入render本身自己创建的场景div中
		 * 达到渲染场景的效果
		 */
		renderer.render(scene, camera);

	}

	// function render() {

	// 	camera.position.x += (mouseX - camera.position.x) * .05;
	// 	camera.position.y += (- mouseY - camera.position.y) * .05;

	// 	camera.lookAt(scene.position);

	// 	renderer.render(scene, camera);

	// }

</script>

<!--<script>
    /**
     * 创建场景对象Scene
     */
	var scene = new THREE.Scene();

    /**
     * 光源设置
     */
	//点光源
	var point = new THREE.PointLight(0xffffff);
	point.position.set(400, 200, 300); //点光源位置
	scene.add(point); //点光源添加到场景中
	//环境光
	var ambient = new THREE.AmbientLight(0x444444);
	scene.add(ambient);
	// console.log(scene)
	// console.log(scene.children)


	/**
 * 加载红色立方体的.obj和.mtl文件，生成网格模型
 */
	var mtlLoader = new THREE.MTLLoader();//mtl材质加载器
	mtlLoader.load('/static/gab/threeCase/AC4V7-ROO.mtl', mtl);//加载.mtl文件，执行mtl函数
	/**声明函数mtl*/
	function mtl(material) {
		var objLoader = new THREE.OBJLoader();//obj模型加载器
		objLoader.setMaterials(material);//mtl材质赋值给obj模型
		objLoader.load('/static/gab/threeCase/AC4V7-ROO.obj', obj);//加载.obj文件，执行obj函数
	}
	/**声明函数obj*/
	function obj(object3D) {
		object3D.scale.set(100, 100, 100);//放大object3D对象
		scene.add(object3D);//object3D对象插入场景对象
	}


    /**
     * 相机设置
     */
	var width = $('#three').width(); //窗口宽度
	var height = $('#three').height(); //窗口高度
	var k = width / height; //窗口宽高比
	var s = 200; //三维场景显示范围控制系数，系数越大，显示的范围越大
	//创建相机对象
	var camera = new THREE.OrthographicCamera(-s * k, s * k, s, -s, 1, 1000);
	camera.position.set(200, 300, 200); //设置相机位置
	camera.lookAt(scene.position); //设置相机方向(指向的场景对象)
    /**
     * 创建渲染器对象
     */
	var renderer = new THREE.WebGLRenderer();
	renderer.setSize(width, height);//设置渲染区域尺寸
	// renderer.setClearColor(0xb9d3ff, 1); //设置背景颜色
	$('#three').append(renderer.domElement); //body元素中插入canvas对象
	//执行渲染操作   指定场景、相机作为参数
	renderer.render(scene, camera);
</script>-->

</html>