package com.tengzhi.business.platform.enroll.controller;

import java.io.IOException;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import com.tengzhi.base.jpa.dto.BaseDto;
import com.tengzhi.base.jpa.page.BasePage;
import com.tengzhi.base.jpa.result.Result;
import com.tengzhi.base.security.common.annotations.Anonymous;
import com.tengzhi.business.platform.enroll.service.ExpertService;
import com.tengzhi.business.platform.enroll.vo.modelVo;
import com.tengzhi.business.system.workflow.model.Backlog;
import com.tengzhi.business.system.workflow.vo.Examine;

@RestController
@RequestMapping("platform/expert")
public class ExpertControler {

	@Autowired
	private ExpertService expertService;

	@GetMapping("/*.html")
	public ModelAndView pageForwart(ModelAndView mv) {
		return mv;
	}

	/**
	 * 根据id查询
	 * 
	 * @throws Exception
	 */
	@GetMapping(value = "expertInfo")
	public Result getById() throws Exception {
		return Result.resultOk(expertService.findById());
	}

	/**
	 * @description:新增
	 * 
	 */
	@PostMapping(value = "add")
	public Result add(@RequestBody modelVo vo) throws Exception {
		expertService.save(vo);
		return Result.resultOk();
	}

	@PutMapping(value = "expertedit")
	public Result modify(@RequestBody modelVo vo) throws Exception {
		expertService.update(vo);
		return Result.resultOkMsg("修改成功");
	}

	/**
	 * 通过id获取对象
	 **/
	@GetMapping(value = "expertalone/{note}")
	public Result expertalone(@PathVariable String note) {
		return Result.resultOk(expertService.expertalone(note));
	}

	/**
	 * 审批
	 * 
	 * @param examine
	 * @return
	 * @throws Exception
	 */
	@PutMapping(value = "/agree")
	public Result agree(@RequestBody Examine examine) throws Exception {
		return expertService.agree(examine);
	}

	/**
	 * 获取专家的记录案列
	 * 
	 * @param cur
	 * @param pageSize
	 * @param pageIndex
	 * @return
	 */
	
	@Anonymous
	@PostMapping(value = "getExpertTech")
public Result getExpertTech(BaseDto baseDto){
	return expertService.getExpertTech(baseDto).getResult();
}
	
	

}
